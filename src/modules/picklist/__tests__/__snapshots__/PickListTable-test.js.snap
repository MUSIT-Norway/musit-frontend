exports[`PickListComponent Should mount 1`] = `
<PickListContainer
  appSession={
    AppSession {
      "state": undefined
    }
  }
  classExistsOnDom={[Function classExistsOnDom]}
  emitError={[Function emitError]}
  emitSuccess={[Function emitSuccess]}
  iconRendrer={[Function iconRendrer]}
  isTypeNode={[Function isTypeNode]}
  pickList={
    Object {
      "nodes": Array [
        Object {
          "marked": true,
          "path": Array [
            1
          ],
          "value": Object {
            "id": 1,
            "name": "Hei"
          }
        },
        Object {
          "marked": true,
          "path": Array [
            1,
            2
          ],
          "value": Object {
            "id": 2,
            "name": "Hei"
          }
        },
        Object {
          "marked": true,
          "path": Array [
            1,
            3
          ],
          "value": Object {
            "id": 3,
            "name": "Hei"
          }
        },
        Object {
          "marked": true,
          "path": Array [
            1,
            3
          ],
          "value": Object {
            "id": 4,
            "name": "Hei"
          }
        }
      ],
      "objects": Array [
        Object {
          "isMainObject": [Function isMainObject],
          "marked": true,
          "path": Array [
            1
          ],
          "value": Object {
            "id": 1,
            "mainObjectId": 1,
            "name": "Test21"
          }
        },
        Object {
          "isMainObject": [Function isMainObject],
          "marked": true,
          "path": Array [
            1,
            2
          ],
          "value": Object {
            "id": 2,
            "mainObjectId": 1,
            "name": "Test2"
          }
        },
        Object {
          "marked": false,
          "path": Array [
            1,
            3
          ],
          "value": Object {
            "id": 3,
            "name": "Test23"
          }
        }
      ]
    }
  }
  refreshNode={[Function refreshNode]}
  refreshObjects={[Function refreshObjects]}
  removeNode={[Function proxy]}
  removeObject={[Function proxy]}
  route={
    Object {
      "type": "objects"
    }
  }
  scannerEnabled={true}
  toggleMainObject={[Function toggleMainObject]}
  toggleNode={[Function proxy]}
  toggleObject={[Function proxy]}
  toggleScanner={[Function toggleScanner]}>
  <div>
    <main>
      <Grid
        bsClass="container"
        componentClass="div"
        fluid={false}>
        <div
          className="container">
          <PageHeader
            bsClass="page-header">
            <div
              className="page-header">
              <h1>
                <div>
                  <span>
                    Plukkliste (objekter)
                  </span>
                  <div
                    style={
                      Object {
                        "float": "right",
                        "margin": "0 25px 0 0"
                      }
                    }>
                    <Button
                      active={true}
                      block={false}
                      bsClass="btn"
                      bsStyle="default"
                      disabled={false}
                      onClick={[Function onClick]}>
                      <button
                        className="btn btn-default active"
                        disabled={false}
                        onClick={[Function onClick]}
                        type="button">
                        <img
                          alt="scan"
                          height={25}
                          src="test-file-stub" />
                      </button>
                    </Button>
                  </div>
                </div>
              </h1>
            </div>
          </PageHeader>
          <PickListComponent
            iconRendrer={[Function iconRendrer]}
            isnode={false}
            labelRendrer={[Function labelRendrer]}
            marked={
              Array [
                Object {
                  "id": 1,
                  "mainObjectId": 1,
                  "name": "Test21"
                },
                Object {
                  "id": 2,
                  "mainObjectId": 1,
                  "name": "Test2"
                }
              ]
            }
            move={[Function bound ]}
            picks={
              Array [
                Object {
                  "isMainObject": [Function isMainObject],
                  "marked": true,
                  "path": Array [
                    1
                  ],
                  "value": Object {
                    "id": 1,
                    "mainObjectId": 1,
                    "name": "Test21"
                  }
                },
                Object {
                  "isMainObject": [Function isMainObject],
                  "marked": true,
                  "path": Array [
                    1,
                    2
                  ],
                  "value": Object {
                    "id": 2,
                    "mainObjectId": 1,
                    "name": "Test2"
                  }
                },
                Object {
                  "marked": false,
                  "path": Array [
                    1,
                    3
                  ],
                  "value": Object {
                    "id": 3,
                    "name": "Test23"
                  }
                }
              ]
            }
            print={[Function bound print]}
            remove={[Function remove]}
            toggle={[Function toggle]}>
            <div>
              <Table
                bordered={false}
                bsClass="table"
                condensed={true}
                hover={true}
                responsive={true}
                striped={true}>
                <div
                  className="table-responsive">
                  <table
                    className="table table-striped table-condensed table-hover">
                    <thead>
                      <tr>
                        <th
                          style={
                            Object {
                              "textAlign": "left",
                              "width": "2em"
                            }
                          }>
                          <input
                            checked={false}
                            className="normalAction"
                            onChange={[Function onChange]}
                            title="Velg alle"
                            type="checkbox" />
                        </th>
                        <th
                          style={
                            Object {
                              "textAlign": "left",
                              "verticalAlign": "bottom"
                            }
                          }>
                          <FontAwesome
                            className="normalActionNoPadding"
                            name="truck"
                            onClick={[Function onClick]}
                            style={
                              Object {
                                "fontSize": "1.5em"
                              }
                            }
                            title="Flytt valgte objekter">
                            <span
                              className="fa fa-truck normalActionNoPadding"
                              onClick={[Function onClick]}
                              style={
                                Object {
                                  "fontSize": "1.5em"
                                }
                              }
                              title="Flytt valgte objekter" />
                          </FontAwesome>
                          <span
                            className="normalActionNoPadding"
                            style={
                              Object {
                                "fontSize": "0.8em"
                              }
                            }
                            title="Valgt objekte(r)">
                            (2)
                          </span>
                          <FontAwesome
                            className="normalAction"
                            name="remove"
                            onClick={[Function onClick]}
                            style={
                              Object {
                                "fontSize": "1.5em"
                              }
                            }
                            title="Fjern valgte objekter fra listen">
                            <span
                              className="fa fa-remove normalAction"
                              onClick={[Function onClick]}
                              style={
                                Object {
                                  "fontSize": "1.5em"
                                }
                              }
                              title="Fjern valgte objekter fra listen" />
                          </FontAwesome>
                          <span
                            className="normalActionNoPadding"
                            style={
                              Object {
                                "fontSize": "0.8em"
                              }
                            }
                            title="Valgt objekte(r)">
                            (2)
                          </span>
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr
                        className={undefined}>
                        <td
                          style={
                            Object {
                              "textAlign": "left",
                              "verticalAlign": "middle",
                              "width": "3em"
                            }
                          }>
                          <span>
                            <input
                              checked="checked"
                              disabled={true}
                              type="checkbox" />
                          </span>
                        </td>
                        <td>
                          <span
                            className="pickListIcon">
                            <FontAwesome
                              name="folder">
                              <span
                                className="fa fa-folder" />
                            </FontAwesome>
                            <div>
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                }>
                                Test21
                              </span>
                              <div
                                className="labelText">
                                <Breadcrumb
                                  allActive={true}
                                  node={
                                    Array [
                                      1
                                    ]
                                  }
                                  onClickCrumb={[Function onClickCrumb]}>
                                  <div>
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      overlay={
                                        <function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }
                                          bsClass="popover"
                                          id="breadcrumb tooltip"
                                          placement="right">
                                          Magasin
                                        </function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "hover",
                                          "focus"
                                        ]
                                      }>
                                      <span
                                        aria-describedby="breadcrumb tooltip"
                                        onBlur={[Function bound handleDelayedHide]}
                                        onClick={null}
                                        onFocus={[Function bound handleDelayedShow]}
                                        onMouseOut={[Function anonymous]}
                                        onMouseOver={[Function anonymous]}>
                                        <a
                                          href="/magasin"
                                          onClick={[Function anonymous]}>
                                          <FontAwesome
                                            name="home"
                                            style={
                                              Object {
                                                "fontSize": "1.5em",
                                                "padding": "1px"
                                              }
                                            }>
                                            <span
                                              className="fa fa-home"
                                              style={
                                                Object {
                                                  "fontSize": "1.5em",
                                                  "padding": "1px"
                                                }
                                              } />
                                          </FontAwesome>
                                        </a>
                                      </span>
                                    </OverlayTrigger>
                                    <span>
                                      <OverlayTrigger
                                        defaultOverlayShown={false}
                                        overlay={
                                          <function Popover() {
                                              (0, _classCallCheck3['default'])(this, Popover);
                                              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                            }
                                            bsClass="popover"
                                            id="breadcrumb tooltip"
                                            placement="right" />
                                        }
                                        placement="top"
                                        trigger={
                                          Array [
                                            "hover",
                                            "focus"
                                          ]
                                        }>
                                        <span
                                          aria-describedby="breadcrumb tooltip"
                                          onBlur={[Function bound handleDelayedHide]}
                                          onClick={null}
                                          onFocus={[Function bound handleDelayedShow]}
                                          onMouseOut={[Function anonymous]}
                                          onMouseOver={[Function anonymous]}>
                                          <span>
                                            <FontAwesome
                                              name="folder"
                                              style={
                                                Object {
                                                  "padding": "1px"
                                                }
                                              }>
                                              <span
                                                className="fa fa-folder"
                                                style={
                                                  Object {
                                                    "padding": "1px"
                                                  }
                                                } />
                                            </FontAwesome>
                                          </span>
                                        </span>
                                      </OverlayTrigger>
                                    </span>
                                  </div>
                                </Breadcrumb>
                              </div>
                            </div>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className={undefined}>
                        <td
                          style={
                            Object {
                              "textAlign": "left",
                              "verticalAlign": "middle",
                              "width": "3em"
                            }
                          }>
                          <span>
                            <input
                              checked="checked"
                              disabled={true}
                              type="checkbox" />
                          </span>
                        </td>
                        <td>
                          <span
                            className="pickListIcon">
                            <FontAwesome
                              name="folder">
                              <span
                                className="fa fa-folder" />
                            </FontAwesome>
                            <div>
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                }>
                                Test2
                              </span>
                              <div
                                className="labelText">
                                <Breadcrumb
                                  allActive={true}
                                  node={
                                    Array [
                                      1,
                                      2
                                    ]
                                  }
                                  onClickCrumb={[Function onClickCrumb]}>
                                  <div>
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      overlay={
                                        <function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }
                                          bsClass="popover"
                                          id="breadcrumb tooltip"
                                          placement="right">
                                          Magasin
                                        </function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "hover",
                                          "focus"
                                        ]
                                      }>
                                      <span
                                        aria-describedby="breadcrumb tooltip"
                                        onBlur={[Function bound handleDelayedHide]}
                                        onClick={null}
                                        onFocus={[Function bound handleDelayedShow]}
                                        onMouseOut={[Function anonymous]}
                                        onMouseOver={[Function anonymous]}>
                                        <a
                                          href="/magasin"
                                          onClick={[Function anonymous]}>
                                          <FontAwesome
                                            name="home"
                                            style={
                                              Object {
                                                "fontSize": "1.5em",
                                                "padding": "1px"
                                              }
                                            }>
                                            <span
                                              className="fa fa-home"
                                              style={
                                                Object {
                                                  "fontSize": "1.5em",
                                                  "padding": "1px"
                                                }
                                              } />
                                          </FontAwesome>
                                        </a>
                                      </span>
                                    </OverlayTrigger>
                                    <span>
                                      <OverlayTrigger
                                        defaultOverlayShown={false}
                                        overlay={
                                          <function Popover() {
                                              (0, _classCallCheck3['default'])(this, Popover);
                                              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                            }
                                            bsClass="popover"
                                            id="breadcrumb tooltip"
                                            placement="right" />
                                        }
                                        placement="top"
                                        trigger={
                                          Array [
                                            "hover",
                                            "focus"
                                          ]
                                        }>
                                        <span
                                          aria-describedby="breadcrumb tooltip"
                                          onBlur={[Function bound handleDelayedHide]}
                                          onClick={null}
                                          onFocus={[Function bound handleDelayedShow]}
                                          onMouseOut={[Function anonymous]}
                                          onMouseOver={[Function anonymous]}>
                                          <span>
                                            <FontAwesome
                                              name="folder"
                                              style={
                                                Object {
                                                  "padding": "1px"
                                                }
                                              }>
                                              <span
                                                className="fa fa-folder"
                                                style={
                                                  Object {
                                                    "padding": "1px"
                                                  }
                                                } />
                                            </FontAwesome>
                                          </span>
                                        </span>
                                      </OverlayTrigger>
                                    </span>
                                    <span>
                                      <OverlayTrigger
                                        defaultOverlayShown={false}
                                        overlay={
                                          <function Popover() {
                                              (0, _classCallCheck3['default'])(this, Popover);
                                              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                            }
                                            bsClass="popover"
                                            id="breadcrumb tooltip"
                                            placement="right" />
                                        }
                                        placement="top"
                                        trigger={
                                          Array [
                                            "hover",
                                            "focus"
                                          ]
                                        }>
                                        <span
                                          aria-describedby="breadcrumb tooltip"
                                          onBlur={[Function bound handleDelayedHide]}
                                          onClick={null}
                                          onFocus={[Function bound handleDelayedShow]}
                                          onMouseOut={[Function anonymous]}
                                          onMouseOver={[Function anonymous]}>
                                          <span>
                                            <FontAwesome
                                              name="folder"
                                              style={
                                                Object {
                                                  "padding": "1px"
                                                }
                                              }>
                                              <span
                                                className="fa fa-folder"
                                                style={
                                                  Object {
                                                    "padding": "1px"
                                                  }
                                                } />
                                            </FontAwesome>
                                          </span>
                                        </span>
                                      </OverlayTrigger>
                                    </span>
                                  </div>
                                </Breadcrumb>
                              </div>
                            </div>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className={undefined}>
                        <td
                          style={
                            Object {
                              "textAlign": "left",
                              "verticalAlign": "middle",
                              "width": "3em"
                            }
                          }>
                          <span>
                            <input
                              checked=""
                              onChange={[Function onChange]}
                              type="checkbox" />
                          </span>
                        </td>
                        <td>
                          <span
                            className="pickListIcon">
                            <FontAwesome
                              name="folder">
                              <span
                                className="fa fa-folder" />
                            </FontAwesome>
                            <div>
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                } />
                              <span
                                style={
                                  Object {
                                    "paddingLeft": "1em"
                                  }
                                }>
                                Test23
                              </span>
                              <div
                                className="labelText">
                                <Breadcrumb
                                  allActive={true}
                                  node={
                                    Array [
                                      1,
                                      3
                                    ]
                                  }
                                  onClickCrumb={[Function onClickCrumb]}>
                                  <div>
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      overlay={
                                        <function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }
                                          bsClass="popover"
                                          id="breadcrumb tooltip"
                                          placement="right">
                                          Magasin
                                        </function Popover() {
                                            (0, _classCallCheck3['default'])(this, Popover);
                                            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                          }>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "hover",
                                          "focus"
                                        ]
                                      }>
                                      <span
                                        aria-describedby="breadcrumb tooltip"
                                        onBlur={[Function bound handleDelayedHide]}
                                        onClick={null}
                                        onFocus={[Function bound handleDelayedShow]}
                                        onMouseOut={[Function anonymous]}
                                        onMouseOver={[Function anonymous]}>
                                        <a
                                          href="/magasin"
                                          onClick={[Function anonymous]}>
                                          <FontAwesome
                                            name="home"
                                            style={
                                              Object {
                                                "fontSize": "1.5em",
                                                "padding": "1px"
                                              }
                                            }>
                                            <span
                                              className="fa fa-home"
                                              style={
                                                Object {
                                                  "fontSize": "1.5em",
                                                  "padding": "1px"
                                                }
                                              } />
                                          </FontAwesome>
                                        </a>
                                      </span>
                                    </OverlayTrigger>
                                    <span>
                                      <OverlayTrigger
                                        defaultOverlayShown={false}
                                        overlay={
                                          <function Popover() {
                                              (0, _classCallCheck3['default'])(this, Popover);
                                              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                            }
                                            bsClass="popover"
                                            id="breadcrumb tooltip"
                                            placement="right" />
                                        }
                                        placement="top"
                                        trigger={
                                          Array [
                                            "hover",
                                            "focus"
                                          ]
                                        }>
                                        <span
                                          aria-describedby="breadcrumb tooltip"
                                          onBlur={[Function bound handleDelayedHide]}
                                          onClick={null}
                                          onFocus={[Function bound handleDelayedShow]}
                                          onMouseOut={[Function anonymous]}
                                          onMouseOver={[Function anonymous]}>
                                          <span>
                                            <FontAwesome
                                              name="folder"
                                              style={
                                                Object {
                                                  "padding": "1px"
                                                }
                                              }>
                                              <span
                                                className="fa fa-folder"
                                                style={
                                                  Object {
                                                    "padding": "1px"
                                                  }
                                                } />
                                            </FontAwesome>
                                          </span>
                                        </span>
                                      </OverlayTrigger>
                                    </span>
                                    <span>
                                      <OverlayTrigger
                                        defaultOverlayShown={false}
                                        overlay={
                                          <function Popover() {
                                              (0, _classCallCheck3['default'])(this, Popover);
                                              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
                                            }
                                            bsClass="popover"
                                            id="breadcrumb tooltip"
                                            placement="right" />
                                        }
                                        placement="top"
                                        trigger={
                                          Array [
                                            "hover",
                                            "focus"
                                          ]
                                        }>
                                        <span
                                          aria-describedby="breadcrumb tooltip"
                                          onBlur={[Function bound handleDelayedHide]}
                                          onClick={null}
                                          onFocus={[Function bound handleDelayedShow]}
                                          onMouseOut={[Function anonymous]}
                                          onMouseOver={[Function anonymous]}>
                                          <span>
                                            <FontAwesome
                                              name="folder"
                                              style={
                                                Object {
                                                  "padding": "1px"
                                                }
                                              }>
                                              <span
                                                className="fa fa-folder"
                                                style={
                                                  Object {
                                                    "padding": "1px"
                                                  }
                                                } />
                                            </FontAwesome>
                                          </span>
                                        </span>
                                      </OverlayTrigger>
                                    </span>
                                  </div>
                                </Breadcrumb>
                              </div>
                            </div>
                          </span>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </Table>
            </div>
          </PickListComponent>
          <div
            style={
              Object {
                "textAlign": "left"
              }
            } />
        </div>
      </Grid>
    </main>
  </div>
</PickListContainer>
`;

exports[`PickListComponent should display component (nodes) correctly 1`] = `
<div>
  <main>
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={false}>
      <PageHeader
        bsClass="page-header">
        <div>
          <span>
            Plukkliste (noder)
          </span>
          <div
            style={
              Object {
                "float": "right",
                "margin": "0 25px 0 0"
              }
            }>
            <Button
              active={true}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function onClick]}>
              <img
                alt="scan"
                height={25}
                src="test-file-stub" />
            </Button>
          </div>
        </div>
      </PageHeader>
      <PickListComponent
        iconRendrer={[Function iconRendrer]}
        isnode={true}
        labelRendrer={[Function labelRendrer]}
        marked={
          Array [
            Object {
              "id": 1,
              "name": "Hei"
            },
            Object {
              "id": 2,
              "name": "Hei"
            },
            Object {
              "id": 3,
              "name": "Hei"
            },
            Object {
              "id": 4,
              "name": "Hei"
            }
          ]
        }
        move={[Function bound ]}
        picks={
          Array [
            Object {
              "marked": true,
              "path": Array [
                1
              ],
              "value": Object {
                "id": 1,
                "name": "Hei"
              }
            },
            Object {
              "marked": true,
              "path": Array [
                1,
                2
              ],
              "value": Object {
                "id": 2,
                "name": "Hei"
              }
            },
            Object {
              "marked": true,
              "path": Array [
                1,
                3
              ],
              "value": Object {
                "id": 3,
                "name": "Hei"
              }
            },
            Object {
              "marked": true,
              "path": Array [
                1,
                3
              ],
              "value": Object {
                "id": 4,
                "name": "Hei"
              }
            }
          ]
        }
        print={[Function bound print]}
        remove={[Function remove]}
        toggle={[Function toggle]} />
      <div
        style={
          Object {
            "textAlign": "left"
          }
        }>
        4
        /
        4
          
        node(r) valgt.
      </div>
    </Grid>
  </main>
</div>
`;

exports[`PickListComponent should display component (objects) correctly 1`] = `
<div>
  <main>
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={false}>
      <PageHeader
        bsClass="page-header">
        <div>
          <span>
            Plukkliste (objekter)
          </span>
          <div
            style={
              Object {
                "float": "right",
                "margin": "0 25px 0 0"
              }
            }>
            <Button
              active={true}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function onClick]}>
              <img
                alt="scan"
                height={25}
                src="test-file-stub" />
            </Button>
          </div>
        </div>
      </PageHeader>
      <PickListComponent
        iconRendrer={[Function iconRendrer]}
        isnode={false}
        labelRendrer={[Function labelRendrer]}
        marked={
          Array [
            Object {
              "id": 1,
              "mainObjectId": 1,
              "name": "Test21"
            },
            Object {
              "id": 2,
              "mainObjectId": 1,
              "name": "Test2"
            }
          ]
        }
        move={[Function bound ]}
        picks={
          Array [
            Object {
              "isMainObject": [Function isMainObject],
              "marked": true,
              "path": Array [
                1
              ],
              "value": Object {
                "id": 1,
                "mainObjectId": 1,
                "name": "Test21"
              }
            },
            Object {
              "isMainObject": [Function isMainObject],
              "marked": true,
              "path": Array [
                1,
                2
              ],
              "value": Object {
                "id": 2,
                "mainObjectId": 1,
                "name": "Test2"
              }
            },
            Object {
              "marked": false,
              "path": Array [
                1,
                3
              ],
              "value": Object {
                "id": 3,
                "name": "Test23"
              }
            }
          ]
        }
        print={[Function bound print]}
        remove={[Function remove]}
        toggle={[Function toggle]} />
      <div
        style={
          Object {
            "textAlign": "left"
          }
        }>
        2
        /
        3
          
        objekte(r) valgt.
      </div>
    </Grid>
  </main>
</div>
`;

exports[`PickListTable should display node-picklist correctly 1`] = `
<div>
  <Table
    bordered={false}
    bsClass="table"
    condensed={true}
    hover={true}
    responsive={true}
    striped={true}>
    <thead>
      <tr>
        <th
          style={
            Object {
              "textAlign": "left",
              "width": "2em"
            }
          }>
          <input
            checked={false}
            className="normalAction"
            onChange={[Function onChange]}
            title="Velg alle"
            type="checkbox" />
        </th>
        <th
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "bottom"
            }
          }>
          <FontAwesome
            className="normalActionNoPadding"
            name="print"
            onClick={[Function onClick]}
            style={
              Object {
                "fontSize": "1.5em"
              }
            }
            title="Skriv ut etiketter for valgte noder" />
          <span
            className="normalActionNoPadding"
            style={
              Object {
                "fontSize": "0.8em"
              }
            }
            title="Valgt node(r)">
            (1)
          </span>
          <FontAwesome
            className="normalAction"
            name="truck"
            onClick={[Function onClick]}
            style={
              Object {
                "fontSize": "1.5em"
              }
            }
            title="Flytt valgte noder" />
          <span
            className="normalActionNoPadding"
            style={
              Object {
                "fontSize": "0.8em"
              }
            }
            title="Valgt node(r)">
            (1)
          </span>
          <FontAwesome
            className="normalAction"
            name="remove"
            onClick={[Function onClick]}
            style={
              Object {
                "fontSize": "1.5em"
              }
            }
            title="Fjern valgte noder fra listen" />
          <span
            className="normalActionNoPadding"
            style={
              Object {
                "fontSize": "0.8em"
              }
            }
            title="Valgt node(r)">
            (1)
          </span>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        className={undefined}>
        <td
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "middle",
              "width": "3em"
            }
          }>
          <span>
            <input
              checked=""
              onChange={[Function onChange]}
              type="checkbox" />
          </span>
        </td>
        <td>
          <span
            className="pickListIcon">
            <span
              className="icon icon-musitobject" />
             
            <div>
              <span
                style={
                  Object {
                    "paddingLeft": "1em"
                  }
                } />
              <div
                className="labelText" />
            </div>
          </span>
        </td>
      </tr>
      <tr
        className={undefined}>
        <td
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "middle",
              "width": "3em"
            }
          }>
          <span>
            <input
              checked="checked"
              onChange={[Function onChange]}
              type="checkbox" />
          </span>
        </td>
        <td>
          <span
            className="pickListIcon">
            <span
              className="icon icon-musitobject" />
             
            <div>
              <span
                style={
                  Object {
                    "paddingLeft": "1em"
                  }
                } />
              <div
                className="labelText" />
            </div>
          </span>
        </td>
      </tr>
    </tbody>
  </Table>
</div>
`;

exports[`PickListTable should display object-picklist correctly 1`] = `
<div>
  <Table
    bordered={false}
    bsClass="table"
    condensed={true}
    hover={true}
    responsive={true}
    striped={true}>
    <thead>
      <tr>
        <th
          style={
            Object {
              "textAlign": "left",
              "width": "2em"
            }
          }>
          <input
            checked={false}
            className="normalAction"
            onChange={[Function onChange]}
            title="Velg alle"
            type="checkbox" />
        </th>
        <th
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "bottom"
            }
          }>
          <FontAwesome
            className="normalActionNoPadding"
            name="truck"
            onClick={[Function onClick]}
            style={
              Object {
                "fontSize": "1.5em"
              }
            }
            title="Flytt valgte objekter" />
          <span
            className="normalActionNoPadding"
            style={
              Object {
                "fontSize": "0.8em"
              }
            }
            title="Valgt objekte(r)">
            (1)
          </span>
          <FontAwesome
            className="normalAction"
            name="remove"
            onClick={[Function onClick]}
            style={
              Object {
                "fontSize": "1.5em"
              }
            }
            title="Fjern valgte objekter fra listen" />
          <span
            className="normalActionNoPadding"
            style={
              Object {
                "fontSize": "0.8em"
              }
            }
            title="Valgt objekte(r)">
            (1)
          </span>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr
        className={undefined}>
        <td
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "middle",
              "width": "3em"
            }
          }>
          <span>
            <input
              checked=""
              onChange={[Function onChange]}
              type="checkbox" />
          </span>
        </td>
        <td>
          <span
            className="pickListIcon">
            <span
              className="icon icon-musitobject" />
             
            <div>
              <span
                style={
                  Object {
                    "paddingLeft": "1em"
                  }
                } />
              <div
                className="labelText" />
            </div>
          </span>
        </td>
      </tr>
      <tr
        className={undefined}>
        <td
          style={
            Object {
              "textAlign": "left",
              "verticalAlign": "middle",
              "width": "3em"
            }
          }>
          <span>
            <input
              checked="checked"
              onChange={[Function onChange]}
              type="checkbox" />
          </span>
        </td>
        <td>
          <span
            className="pickListIcon">
            <span
              className="icon icon-musitobject" />
             
            <div>
              <span
                style={
                  Object {
                    "paddingLeft": "1em"
                  }
                } />
              <div
                className="labelText" />
            </div>
          </span>
        </td>
      </tr>
    </tbody>
  </Table>
</div>
`;
