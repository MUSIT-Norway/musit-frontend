exports[`Render view control page should set default date and have correct date format for doneDate 1`] = `
<Layout
  breadcrumb={
    <function Breadcrumb() {_classCallCheck(this, Breadcrumb);return _possibleConstructorReturn(this, (Breadcrumb.__proto__ || Object.getPrototypeOf(Breadcrumb)).apply(this, arguments));}
      disabled={true}
      node={
        Object {
          "path": ",1,"
        }
      } />
  }
  content={
    <div>
      <h4
        style={
          Object {
            "textAlign": "center"
          }
        }>
        musit.viewControl.title
      </h4>
      <function Grid() {
          (0, _classCallCheck3['default'])(this, Grid);
          return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
        }
        bsClass="container"
        componentClass="div"
        fluid={false}>
        <function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }
          bsClass="row"
          componentClass="div">
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            md={5}
            sm={4}>
            <function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }
              bsClass="control-label"
              srOnly={false}>
              musit.texts.datePerformed
            </function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }>
            <br />
            <function MusitField() {_classCallCheck(this, MusitField);return _possibleConstructorReturn(this, (MusitField.__proto__ || Object.getPrototypeOf(MusitField)).apply(this, arguments));}
              disabled={true}
              onChange={[Function onChange]}
              value="01.07.2018" />
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            md={5}
            sm={4}>
            <function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }
              bsClass="control-label"
              srOnly={false}>
              musit.texts.performedBy
            </function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }>
            <br />
            <function MusitField() {_classCallCheck(this, MusitField);return _possibleConstructorReturn(this, (MusitField.__proto__ || Object.getPrototypeOf(MusitField)).apply(this, arguments));}
              disabled={true}
              onChange={[Function onChange]}
              value="Jarl" />
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
        </function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }>
        <function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }
          bsClass="row"
          componentClass="div">
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            md={5}
            sm={4}>
            <function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }
              bsClass="control-label"
              srOnly={false}>
              musit.texts.dateRegistered
            </function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }>
            <br />
            <function MusitField() {_classCallCheck(this, MusitField);return _possibleConstructorReturn(this, (MusitField.__proto__ || Object.getPrototypeOf(MusitField)).apply(this, arguments));}
              disabled={true}
              onChange={[Function onChange]}
              value="01.07.2018" />
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            md={5}
            sm={4}>
            <function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }
              bsClass="control-label"
              srOnly={false}>
              musit.texts.registeredBy
            </function ControlLabel() {
                (0, _classCallCheck3['default'])(this, ControlLabel);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }>
            <br />
            <function MusitField() {_classCallCheck(this, MusitField);return _possibleConstructorReturn(this, (MusitField.__proto__ || Object.getPrototypeOf(MusitField)).apply(this, arguments));}
              disabled={true}
              onChange={[Function onChange]}
              value="Stein Olsen" />
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
        </function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }>
        <function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }
          bsClass="row"
          componentClass="div">
          <br />
        </function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }>
        <function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }
          bsClass="row"
          componentClass="div">
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            md={10}
            sm={8}>
            <function ControlView(props) {/* istanbul ignore next */_classCallCheck(this, ControlView);var _this = _possibleConstructorReturn(this, (ControlView.__proto__ || Object.getPrototypeOf(ControlView)).call(this,
                props)); /* istanbul ignore next */_this.
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
                controlOk =
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactBootstrap.Col, /* istanbul ignore next */{ xs: 5, sm: 5, md: 5, __source: { fileName: _jsxFileName, lineNumber: 91 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactFontawesome2.default, /* istanbul ignore next */{ name: 'check', style: { 'fontSize': 'x-large' }, __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this }), /* istanbul ignore next */'  ' +
                  /* istanbul ignore next */_this.props.translate('musit.texts.ok')); /* istanbul ignore next */_this.
            
            
            
                controlNotOk =
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactBootstrap.Col, /* istanbul ignore next */{ xs: 5, sm: 5, md: 5, __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactFontawesome2.default, /* istanbul ignore next */{ name: 'close', style: { 'fontSize': 'x-large' }, __source: { fileName: _jsxFileName, lineNumber: 99 }, __self: this }), /* istanbul ignore next */'  ' +
                  /* istanbul ignore next */_this.props.translate('musit.texts.notOk')); /* istanbul ignore next */_this.state = { alcohol: { open: false }, cleaning: { open: false }, gas: { open: false }, hypoxicAir: { open: false }, lightingCondition: { open: false }, mold: { open: false }, pest: { open: false }, relativeHumidity: { open: false }, temperature: { open: false } }; /* istanbul ignore next */_this.downButton = /* istanbul ignore next */_this.downButton.bind( /* istanbul ignore next */_this); /* istanbul ignore next */_this.oneTableRow = /* istanbul ignore next */_this.oneTableRow.bind( /* istanbul ignore next */_this); /* istanbul ignore next */_this.getControls = /* istanbul ignore next */_this.getControls.bind( /* istanbul ignore next */_this); /* istanbul ignore next */_this.showObservation = /* istanbul ignore next */_this.showObservation.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;}
              controlsJson={
                Object {
                  "doneBy": Object {
                    "fn": "Arne And",
                    "id": 1
                  },
                  "doneDate": "2018-06-30T22:00:00.000Z",
                  "registeredBy": "Stein Olsen",
                  "registeredDate": "2018-06-30T22:00:00.000Z"
                }
              }
              id="1"
              translate={[Function translate]} />
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
        </function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }>
        <function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }
          bsClass="row"
          className="row-centered"
          componentClass="div"
          style={
            Object {
              "border": "12px",
              "borderColor": "red",
              "textAlign": "center"
            }
          }>
          <function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }
            bsClass="col"
            componentClass="div"
            xs={10}>
            <function Button() {
                (0, _classCallCheck3['default'])(this, Button);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function onClick]}>
              Lukk
            </function Button() {
                (0, _classCallCheck3['default'])(this, Button);
                return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
              }>
          </function Col() {
              (0, _classCallCheck3['default'])(this, Col);
              return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
            }>
        </function Row() {
            (0, _classCallCheck3['default'])(this, Row);
            return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
          }>
      </function Grid() {
          (0, _classCallCheck3['default'])(this, Grid);
          return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
        }>
    </div>
  }
  leftMenu={
    <div
      style={
        Object {
          "minHeight": 0
        }
      } />
  }
  title="Magasin"
  toolbar={<span />}
  translate={[Function translate]} />
`;
